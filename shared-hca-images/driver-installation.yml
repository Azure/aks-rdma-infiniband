apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: &name install-mlx-driver
  labels:
    app: *name
spec:
  selector:
    matchLabels:
      app: *name
  template:
    metadata:
      labels:
        app: *name
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node.kubernetes.io/instance-type
                operator: In
                values:
                - standard_h8
                - standard_h16mr
                - standard_h8m
                - standard_h16m
                - standard_h16r
                - standard_h16mr
                - standard_hb60rs
                - standard_hb120rs_v2
                - standard_hb120rs_v3
                - standard_hb120-96rs_v3
                - standard_hb120-64rs_v3
                - standard_hb120-32rs_v3
                - standard_hb120-16rs_v3
                - standard_hc44rs
      hostNetwork: true
      hostPID: true
      containers:
      - image: <your image name here>
        imagePullPolicy: Always
        name: *name
        command: ["/entrypoint.sh"] 
        args: ["installonly"] # set this to "downloadandinstall" if you are not using a custom image
        resources:
          requests:
            {}
          limits:
            {}
        securityContext:
          privileged: true
        volumeMounts:
        - name: actions
          mountPath: "/opt/actions"
        - name: hostmount
          mountPath: "/mnt/actions"
        - name: debs
          mountPath: "/mnt/debs"
      volumes:
      - name: debs
        hostPath:
          path: /opt/debs
          type: DirectoryOrCreate
      - name: hostmount
        hostPath:
          path: /opt/actions
          type: DirectoryOrCreate
      - name: actions
        configMap:
          name: install-driver-actions
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: install-driver-actions
  labels:
    app: install-mlx-driver
data:
  installonly: |
    #!/usr/bin/env bash
    set -eo pipefail

    # This script should be executed on VM host in the directly as the deb 
    # will install systemd units and host dependencies.

    SECONDS=0

    cd /opt/debs
    mount -o ro,loop MLNX_OFED_LINUX-5.6-2.0.9.0-ubuntu18.04-x86_64.iso /mnt
    /mnt/mlnxofedinstall --force
    /etc/init.d/openibd restart
    set -x

    check_ib="$(ip link | grep ib0)"

    if [ -z "$check_ib" ];
    then
      echo "driver installation failed"
      exit 1
    else
      echo "driver installation successful"
    fi
    echo "installation completed in $SECONDS seconds"
    

  downloadandinstall: |
    #!/usr/bin/env bash
    set -eo pipefail

    SECONDS=0
    apt update && apt install -y curl
    curl -L https://content.mellanox.com/ofed/MLNX_OFED-5.6-2.0.9.0/MLNX_OFED_LINUX-5.6-2.0.9.0-ubuntu18.04-x86_64.iso -o MLNX_OFED_LINUX-5.6-2.0.9.0-ubuntu18.04-x86_64.iso

    mount -o ro,loop MLNX_OFED_LINUX-5.6-2.0.9.0-ubuntu18.04-x86_64.iso /mnt
    /mnt/mlnxofedinstall --force
    /etc/init.d/openibd restart
    set -x

    check_ib="$(ip link | grep ib0)"

    if [ -z "$check_ib" ];
    then
      echo "driver installation failed"
      exit 1
    else
      echo "driver installation successful"
    fi    
    echo "installation completed in $SECONDS seconds"
---
